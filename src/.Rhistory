load_all('src/kinetic')
templib <- tempfile()
dir.create(templib)
.libPaths(templib)
install.packages("~/mypkg", lib = templib, type = "source", repos = NULL)
install.packages("~/kinetic", lib = templib, type = "source", repos = NULL)
# Prepare response download
#
# prepare function argument(s)
var_api_key <- "api_key_example" # Api key of the study from researcher study page
api_instance <- DefaultApi$new()
api_instance <- kinetic::DefaultApi$new()
result <- tryCatch(
# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# api_instance$GetStudyResponseDownload(var_api_key, data_file = "result.txt"),
api_instance$GetStudyResponseDownload(var_api_key),
ApiException = function(ex) ex
)
api_instance <- kinetic::DefaultApi$new(base_path = "https://google.com")
api_instance <- kinetic::DefaultApi$new(list(base_path = "https://google.com"))
result <- tryCatch(
# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# api_instance$GetStudyResponseDownload(var_api_key, data_file = "result.txt"),
api_instance$GetStudyResponseDownload(var_api_key),
ApiException = function(ex) ex
)
api_instance <- kinetic::DefaultApi$new("https://google.com")
result <- tryCatch(
# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# api_instance$GetStudyResponseDownload(var_api_key, data_file = "result.txt"),
api_instance$GetStudyResponseDownload(var_api_key),
ApiException = function(ex) ex
)
# In case of error, print the error object
if (!is.null(result$ApiException)) {
print("Exception occurs when calling `GetStudyResponseDownload`:")
dput(result$ApiException$toString())
} else {
# deserialized response object
print("The response is ...")
dput(result$toString())
}
# Prepare response download
#
# prepare function argument(s)
var_api_key <- "api_key_example" # Api key of the study from researcher study page
library(kinetic)
# Prepare response download
#
# prepare function argument(s)
var_api_key <- "api_key_example" # Api key of the study from researcher study page
api_instance <- kinetic::DefaultApi$new("https://google.com")
result <- tryCatch(
# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# api_instance$GetStudyResponseDownload(var_api_key, data_file = "result.txt"),
api_instance$GetStudyResponseDownload(var_api_key),
ApiException = function(ex) ex
)
library(kinetic)
# Prepare response download
#
# prepare function argument(s)
var_api_key <- "api_key_example" # Api key of the study from researcher study page
api_instance <- kinetic::DefaultApi$new("https://kinetic.openstax.org/api/v1"")
result <- tryCatch(
# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# api_instance$GetStudyResponseDownload(var_api_key, data_file = "result.txt"),
source("~/example.r")
source("~/example.r")
library(kinetic)
# Prepare response download
#
# prepare function argument(s)
var_api_key <- "api_key_example" # Api key of the study from researcher study page
api_instance <- kinetic::DefaultApi$new("https://kinetic.openstax.org/api/v1")
result <- tryCatch(
# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# api_instance$GetStudyResponseDownload(var_api_key, data_file = "result.txt"),
api_instance$GetStudyResponseDownload(var_api_key),
ApiException = function(ex) ex
)
source("~/example.r")
library(kinetic)
# Prepare response download
#
# prepare function argument(s)
var_api_key <- "api_key_example" # Api key of the study from researcher study page
api_instance <- kinetic::DefaultApi$new("https://kinetic.openstax.org/api/v1")
result <- tryCatch(
# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# api_instance$GetStudyResponseDownload(var_api_key, data_file = "result.txt"),
api_instance$GetStudyResponseDownload(var_api_key, data_file = "result.txt"),
ApiException = function(ex) ex
)
library(kinetic)
# Prepare response download
#
# prepare function argument(s)
var_api_key <- "api_key_example" # Api key of the study from researcher study page
api_instance <- kinetic::DefaultApi$new(base_path = "https://kinetic.openstax.org/api/v1")
library(kinetic)
# Prepare response download
#
# prepare function argument(s)
var_api_key <- "api_key_example" # Api key of the study from researcher study page
api_instance <- kinetic::DefaultApi$new()
result <- tryCatch(
# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# api_instance$GetStudyResponseDownload(var_api_key, data_file = "result.txt"),
api_instance$GetStudyResponseDownload(var_api_key, data_file = "result.txt"),
ApiException = function(ex) ex
)
library(kinetic)
# Prepare response download
#
# prepare function argument(s)
var_api_key <- "api_key_example" # Api key of the study from researcher study page
api_instance <- kinetic::DefaultApi$new("https://kinetic.openstax.org/api/v1")
result <- tryCatch(
# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# api_instance$GetStudyResponseDownload(var_api_key, data_file = "result.txt"),
api_instance$GetStudyResponseDownload(var_api_key, data_file = "result.txt"),
ApiException = function(ex) ex
)
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
libPaths(templib)
dir.libPaths(templib)
source("~/example.r")
source("~/install.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
api_instance <- DefaultApi$new()
api_instance$GetStudyResponseDownload(var_api_key, data_file = "result.txt")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
.libPaths()
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
View(api_client)
library(kinetic)
var.api.key <- "api_key_example" # Api key of the study from researcher study page
api_client <- ApiClient$new(basePath = "https://kinetic.openstax.org/api/v1")
api_instance <- DefaultApi$new(apiClient = api_client)
api_instance$GetStudyResponseDownload(var.api.key)
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
source("~/example.r")
# api_instance$GetResponseDownload(var_api_key)
source("~/example.r", echo=TRUE)
source("~/example.r")
source("~/example.r", echo=TRUE)
source("~/example.r", echo=TRUE)
source("~/example.r", echo=TRUE)
source("~/example.r", echo=TRUE)
source("~/example.r", echo=TRUE)
source("~/example.r", echo=TRUE)
source("~/example.r", echo=TRUE)
source("~/example.r", echo=TRUE)
source("~/example.r", echo=TRUE)
source("~/example.r", echo=TRUE)
methods(kinetic)
methods(ApiClient)
methods(kinetic.ApiClient)
methods("mean")
kinetic
kinetic.ApiClient
api_client
methods(api_client)
DefaultApi
source("~/example.r", echo=TRUE)
methods(DefaultApi)
methods("DefaultApi")
DefaultApi
View(DefaultApi)
